{"ast":null,"code":"var _jsxFileName = \"/home/heitor/Documentos/Desenvolvimento/repo-list/src/pages/Main/index.js\";\nimport React, { Component } from 'react';\nimport { FaGithubAlt, FaPlus, FaSpinner } from 'react-icons/fa';\nimport api from '../../services/api';\nimport { Container, Form, SubmitButton, List } from './styles';\nexport default class Main extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      newRepo: '',\n      repositories: [],\n      loading: false\n    };\n\n    this.handleInputChange = e => {\n      this.setState({\n        newRepo: e.target.value\n      });\n    };\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n      this.setState({\n        loading: true\n      });\n      const _this$state = this.state,\n            newRepo = _this$state.newRepo,\n            repositories = _this$state.repositories;\n      const response = await api.get(`/repos/${newRepo}`);\n      const data = {\n        name: response.data.full_name\n      };\n      this.setState({\n        repositories: [...repositories, data],\n        newRepo: '',\n        loading: false\n      });\n    };\n  }\n\n  // Carregar os dados do localStorage\n  componentDidMount() {} // Salvar os dados no localStorage\n\n\n  componentDidUpdate(_, prevState) {\n    const repositories = this.state.repositories;\n\n    if (prevState.repositories != repositories) {\n      localStorage.setItem('repositories', JSON.stringify(repositories));\n    }\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          newRepo = _this$state2.newRepo,\n          repositories = _this$state2.repositories,\n          loading = _this$state2.loading;\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(FaGithubAlt, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Reposit\\xF3rios\"), React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Adicionar reposit\\xF3rio\",\n      value: newRepo,\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(SubmitButton, {\n      loading: loading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, loading ? React.createElement(FaSpinner, {\n      color: \"#FFF\",\n      size: 14,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }) : React.createElement(FaPlus, {\n      color: \"#FFF\",\n      size: 14,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }))), React.createElement(List, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, repositories.map(repository => React.createElement(\"li\", {\n      key: repository.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, repository.name), React.createElement(\"a\", {\n      href: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Detalhes\")))));\n  }\n\n}","map":{"version":3,"sources":["/home/heitor/Documentos/Desenvolvimento/repo-list/src/pages/Main/index.js"],"names":["React","Component","FaGithubAlt","FaPlus","FaSpinner","api","Container","Form","SubmitButton","List","Main","state","newRepo","repositories","loading","handleInputChange","e","setState","target","value","handleSubmit","preventDefault","response","get","data","name","full_name","componentDidMount","componentDidUpdate","_","prevState","localStorage","setItem","JSON","stringify","render","map","repository"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { FaGithubAlt, FaPlus, FaSpinner } from 'react-icons/fa';\n\nimport api from '../../services/api';\n\nimport { Container, Form, SubmitButton, List } from './styles';\n\nexport default class Main extends Component {\n    state = {\n        newRepo: '',\n        repositories: [],\n        loading: false,\n    };\n\n    // Carregar os dados do localStorage\n    componentDidMount() {}\n\n    // Salvar os dados no localStorage\n    componentDidUpdate(_, prevState) {\n        const { repositories } = this.state;\n\n        if (prevState.repositories != repositories) {\n            localStorage.setItem('repositories', JSON.stringify(repositories));\n        }\n    }\n\n    handleInputChange = e => {\n        this.setState({ newRepo: e.target.value });\n    };\n\n    handleSubmit = async e => {\n        e.preventDefault();\n\n        this.setState({ loading: true });\n\n        const { newRepo, repositories } = this.state;\n        const response = await api.get(`/repos/${newRepo}`);\n\n        const data = {\n            name: response.data.full_name,\n        };\n\n        this.setState({\n            repositories: [...repositories, data],\n            newRepo: '',\n            loading: false,\n        });\n    };\n\n    render() {\n        const { newRepo, repositories, loading } = this.state;\n\n        return (\n            <Container>\n                <FaGithubAlt />\n                <h1>Repositórios</h1>\n\n                <Form onSubmit={this.handleSubmit}>\n                    <input\n                        type=\"text\"\n                        placeholder=\"Adicionar repositório\"\n                        value={newRepo}\n                        onChange={this.handleInputChange}\n                    />\n\n                    <SubmitButton loading={loading}>\n                        {loading ? (\n                            <FaSpinner color=\"#FFF\" size={14} />\n                        ) : (\n                            <FaPlus color=\"#FFF\" size={14} />\n                        )}\n                    </SubmitButton>\n                </Form>\n                <List>\n                    {repositories.map(repository => (\n                        <li key={repository.name}>\n                            <span>{repository.name}</span>\n                            <a href=\"\">Detalhes</a>\n                        </li>\n                    ))}\n                </List>\n            </Container>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}