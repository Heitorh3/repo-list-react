{"ast":null,"code":"import _slicedToArray from \"/home/heitor/Documentos/Desenvolvimento/repo-list/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/heitor/Documentos/Desenvolvimento/repo-list/src/pages/Repository/index.js\";\nimport React, { Component } from 'react';\nimport api from '../../services/api';\nexport default class Repository extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      repository: {},\n      issues: [],\n      loading: 'true'\n    };\n  }\n\n  async componentDidMount() {\n    const match = this.props.match;\n    const repoName = decodeURIComponent(match.params.repository);\n\n    const _ref = await Promise.all([api.get(`/repos/${repoName}`), api.get(`/repos/${repoName}/issues`, {\n      params: {\n        state: 'open',\n        per_page: 5\n      }\n    })]),\n          _ref2 = _slicedToArray(_ref, 2),\n          repository = _ref2[0],\n          issues = _ref2[1];\n\n    this.setState({\n      repository: repository.data,\n      issues: issues,\n      loading: true\n    });\n  }\n\n  render() {\n    return React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"Repository\");\n  }\n\n}","map":{"version":3,"sources":["/home/heitor/Documentos/Desenvolvimento/repo-list/src/pages/Repository/index.js"],"names":["React","Component","api","Repository","state","repository","issues","loading","componentDidMount","match","props","repoName","decodeURIComponent","params","Promise","all","get","per_page","setState","data","render"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,GAAP,MAAgB,oBAAhB;AAEA,eAAe,MAAMC,UAAN,SAAyBF,SAAzB,CAAmC;AAAA;AAAA;AAAA,SAC9CG,KAD8C,GACtC;AACJC,MAAAA,UAAU,EAAE,EADR;AAEJC,MAAAA,MAAM,EAAE,EAFJ;AAGJC,MAAAA,OAAO,EAAE;AAHL,KADsC;AAAA;;AAO9C,QAAMC,iBAAN,GAA0B;AAAA,UACdC,KADc,GACJ,KAAKC,KADD,CACdD,KADc;AAEtB,UAAME,QAAQ,GAAGC,kBAAkB,CAACH,KAAK,CAACI,MAAN,CAAaR,UAAd,CAAnC;;AAFsB,iBAIO,MAAMS,OAAO,CAACC,GAAR,CAAY,CAC3Cb,GAAG,CAACc,GAAJ,CAAS,UAASL,QAAS,EAA3B,CAD2C,EAE3CT,GAAG,CAACc,GAAJ,CAAS,UAASL,QAAS,SAA3B,EAAqC;AACjCE,MAAAA,MAAM,EAAE;AACJT,QAAAA,KAAK,EAAE,MADH;AAEJa,QAAAA,QAAQ,EAAE;AAFN;AADyB,KAArC,CAF2C,CAAZ,CAJb;AAAA;AAAA,UAIfZ,UAJe;AAAA,UAIHC,MAJG;;AActB,SAAKY,QAAL,CAAc;AACVb,MAAAA,UAAU,EAAEA,UAAU,CAACc,IADb;AAEVb,MAAAA,MAAM,EAAEA,MAFE;AAGVC,MAAAA,OAAO,EAAE;AAHC,KAAd;AAKH;;AAEDa,EAAAA,MAAM,GAAG;AACL,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AACH;;AA9B6C","sourcesContent":["import React, { Component } from 'react';\n\nimport api from '../../services/api';\n\nexport default class Repository extends Component {\n    state = {\n        repository: {},\n        issues: [],\n        loading: 'true',\n    };\n\n    async componentDidMount() {\n        const { match } = this.props;\n        const repoName = decodeURIComponent(match.params.repository);\n\n        const [repository, issues] = await Promise.all([\n            api.get(`/repos/${repoName}`),\n            api.get(`/repos/${repoName}/issues`, {\n                params: {\n                    state: 'open',\n                    per_page: 5,\n                },\n            }),\n        ]);\n\n        this.setState({\n            repository: repository.data,\n            issues: issues,\n            loading: true,\n        });\n    }\n\n    render() {\n        return <h1>Repository</h1>;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}